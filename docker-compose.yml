version: '3.8'

services:
  # PostgreSQL with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: knowledgebase-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=knowledgebase
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    networks:
      - knowledgebase-network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: knowledgebase-backend
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - database_data:/app/data
      - models_cache:/app/.cache
    environment:
      - CORS_ORIGINS=http://localhost:3000
      - DATABASE_URL=postgresql://user:password@postgres:5432/knowledgebase
      - FRONTEND_URL=http://localhost:3000
      - DEBUG=true
      - DEBUG_WAIT_FOR_ATTACH=false  # Set to true to wait for debugger attachment
    env_file:
      - .env
    depends_on: [postgres]
    networks:
      - knowledgebase-network
    restart: unless-stopped
    # Uncomment the line below to use debug server instead of regular server
    # command: python debug_server.py

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: knowledgebase-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - knowledgebase-network
    restart: unless-stopped

volumes:
  postgres_data:
  database_data:
  models_cache:

networks:
  knowledgebase-network:
    driver: bridge 